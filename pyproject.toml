[tool.ruff.lint]
select = ["A", "E", "I", "U", "B", "C", "D", "F", "G", "RUF100", "N",  "Q", "R", "S", "T",  "W", "COM"]
ignore = [
    # Multi-line docstring summary should start at the first line
    "D212",
    # No blank lines allowed after function docstring (found {num_lines})
    "D202",
    # Probable insecure usage of temporary file or directory: "{}"
    "S108",
    # Missing docstring in public module
    "D100",
    # Logging statement uses f-string
    "G004",
    # Possible SQL injection vector through string-based query construction
    "S608",
    # Checks for docstrings on class definitions that are not preceded by a blank line.
    "D203",
    # Checks for uses of the assert keyword.
    "S101"
]

[tool.ruff]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py311"

# Custom
show-fixes = true
extend-select = ['C4', 'SIM', 'TCH', 'N', 'ICN', 'T20', 'RSE', 'RET', 'SLF', 'ARG', 'TID', 'PD', 'PERF']
extend-exclude = ['PD901']